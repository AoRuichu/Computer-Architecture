
#
# Preferences
#
preferences set plugin-enable-svdatabrowser-new 1
preferences set plugin-enable-groupscope 0
preferences set plugin-enable-interleaveandcompare 0
preferences set plugin-enable-waveformfrequencyplot 0

#
# Mnemonic Maps
#
mmap new  -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new  -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

#
# Design Browser windows
#
if {[catch {window new WatchList -name "Design Browser 1" -geometry 1920x1027+0+32}] != ""} {
    window geometry "Design Browser 1" 1920x1027+0+32
}
window target "Design Browser 1" on
browser using {Design Browser 1}
browser set -scope  simulator::cpu_tb.dut.register_file 
browser set \
    -signalsort name
browser yview see  simulator::cpu_tb.dut.register_file 
browser timecontrol set -lock 0

#
# Waveform windows
#
if {[catch {window new WaveWindow -name "Waveform 1" -geometry 1920x1027+0+32}] != ""} {
    window geometry "Waveform 1" 1920x1027+0+32
}
window target "Waveform 1" on
waveform using {Waveform 1}
waveform sidebar visibility partial
waveform set \
    -primarycursor TimeA \
    -signalnames name \
    -signalwidth 175 \
    -units ps \
    -valuewidth 177
waveform baseline set -time 0

set id [waveform add -signals  {
	simulator::cpu_tb.wen_ext
	} ]
set id [waveform add -signals  {
	simulator::cpu_tb.ren_ext
	} ]
set id [waveform add -signals  {
	{simulator::cpu_tb.wdata_ext[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::cpu_tb.wen_ext
	} ]
set id [waveform add -signals  {
	simulator::cpu_tb.debug_regfile.i
	} ]
set id [waveform add -signals  {
	{simulator::cpu_tb.dut.r_currentPC[64:0]}
	} ]
waveform hierarchy collapse $id
set id [waveform add -signals  {
	{simulator::cpu_tb.dut.r_currentPC2[64:0]}
	} ]
set id [waveform add -signals  {
	{simulator::cpu_tb.dut.regfile_rdata_1[63:0]}
	} ]
set id [waveform add -signals  {
	{simulator::cpu_tb.dut.regfile_rdata_2[63:0]}
	} ]
set id [waveform add -signals  {
	{simulator::cpu_tb.dut.regfile_waddr[4:0]}
	} ]
set id [waveform add -signals  {
	{simulator::cpu_tb.dut.regfile_wdata[63:0]}
	} ]
set id [waveform add -signals  {
	{simulator::cpu_tb.dut.register_file.reg_array[0:31]}
	} ]
waveform hierarchy expand $id
set id2 [lindex [waveform hierarchy content $id] 23]
waveform hierarchy collapse $id2

waveform xview limits 0 32450000ps

#
# Waveform Window Links
#

#
# Source Browser windows
#
if {[catch {window new SrcBrowser -name "Source Browser 1" -geometry 700x525+40+74}] != ""} {
    window geometry "Source Browser 1" 700x525+40+74
}
window target "Source Browser 1" on
srcbrowser using {Source Browser 1}
srcbrowser set \
    -primarycursor TimeA \
    -units ps \
    -radix default \
    -showstrength 0 \
    -showcallstack 0 \
    -displayvalues 0

srcbrowser show -scope cpu_tb.wait_for_STOP_instruction -file /users/students/r0926826/kuleuven/6/ca/Computer-Architecture/CA_Exercises/Verilog/cpu_tb.v -line 104

srcbrowser sidebar visibility partial

#
# Console windows
#
console set -windowname Console
window geometry Console 730x250+261+564

#
# Layout selection
#
